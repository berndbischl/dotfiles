#!/usr/bin/env python

import subprocess
import getpass

def get_queue_status(jobs, type, queue, user, user_name):
  rj = rc = qj = qc = hj = hc = 0
  for s in jobs:
    if ( 
      ( 
        (type == "eth" and ("_et" in s or "ultra" in s) and (queue == "total" or queue in s ))
          or
        (type == "quad" and "_qu" in s and (queue == "total" or queue in s))
      ) 
        and 
      ((not user) or (user_name in s)) 
    ): 
      x = s.split() 
      if len(x) == 11 and x[9] != "-": 
        c = x[6]
        # FIXME: why does this happen, cores = --
        if c == "--":
          c = 0
        else:
          c = int(c)
        if " R " in s:
          rj = rj + 1
          rc = rc + c
        if " Q " in s:
          qj = qj + 1
          qc = qc + c   
        if " H " in s:
          hj = hj + 1
          hc = hc + c 
  return rj,rc,qj,qc,hj,hc 

def print_queue_status(jobs, type, queue, user, user_name):
  s = get_queue_status(jobs, type, queue, user, user_name)
  print "{0:>13}:  {1:4d} ({2:4d}) {3:4d} ({4:4d}) {5:4d} ({6:4d})".format(queue, s[0], s[1], s[2], s[3], s[4], s[5])

def print_eths(jobs, user, user_name):
  print "ETH"
  print_queue_status(jobs, "eth", "short", user, user_name)
  print_queue_status(jobs, "eth", "med", user, user_name)
  print_queue_status(jobs, "eth", "long", user, user_name)
  print_queue_status(jobs, "eth", "ultra", user, user_name)
  print_queue_status(jobs, "eth", "total", user, user_name)
  print "QUAD"
  print_queue_status(jobs, "quad", "short", user, user_name)
  print_queue_status(jobs, "quad", "med", user, user_name)
  print_queue_status(jobs, "quad", "long", user, user_name)
  print_queue_status(jobs, "quad", "total", user, user_name)

jobs = subprocess.Popen(["qstat", "-a", 
  "short_eth", "med_eth", "long_eth", "ultralong_eth", "short_quad", "med_quad", "long_quad"], 
  stdout=subprocess.PIPE)
jobs = jobs.stdout.readlines()
user_name = getpass.getuser()

print "       QUEUES:     R (core)    Q (core)    H (core)"
print "---------------------------All---------------------"
print_eths(jobs, False, "")
print "--------------------------User---------------------"
print_eths(jobs, True, user_name)

